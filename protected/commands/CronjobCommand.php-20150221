<?php
class CronjobCommand extends CConsoleCommand {
        
        private $path;
        private $pathTemporal;
        private $pathXml;
        private $pathPdf;
        private $errores;
        

    public function run($args) {
        
      $this->path=Yii::getPathOfAlias('webroot'). '/data/documentos/';
      $this->pathTemporal= $this->path.'tmp';
      $this->pathXml= $this->path.'xml';
      $this->pathPdf= $this->path.'pdf/';
      $this->scanDirectorio($this->pathTemporal);
   
    }
    
    function scanDirectorio( $path){
        $dir = opendir($path);
        while ($elemento = readdir($dir)){
            if( $elemento != "." && $elemento != ".."){
                if (!is_dir($path.$elemento)){
                    $extension = explode(".", $elemento); 
                    if (end($extension)=='xml')   $this->ProcesarArchivo ($path.DIRECTORY_SEPARATOR.$elemento);
                    
                    else  rename ($path.'/'.$elemento, $this->pathPdf.$elemento);
                } 
            }
        }
        
       
    }
    
    function ProcesarArchivo($path)
    {
     
        $this->errores[]=array();
        $errores=array();
        $data=$this->LeerArchivoXML($path);
        if (count((array)$data)==0)
        echo 'Error :Formato incorrecto en el archivo:'.basename($path)." \n"; 
        else
        {
           if(!$this->GuardarArchivo($data,$path)) {
           echo "Error :".  dirname($path)." \n";
           $newname= dirname($path).DIRECTORY_SEPARATOR.'Error_'.  str_replace('Error_','',basename($path,".xml")).".xml";
           rename($path, $newname);
        }
           //else  echo "OK :".basename($path)."\n";
           
        }
    }
    
    
    function LeerArchivoXML($path){
         $datos = new stdClass();
        $languages = simplexml_load_file($path);
                 if (!isset ($languages->infoTributaria)){
                    $languages= simplexml_load_file($path,'SimpleXMLElement', LIBXML_NOCDATA);
                    $languages= simplexml_load_string($languages->comprobante, 'SimpleXMLElement', LIBXML_NOCDATA);
        }
              if (isset($languages->infoTributaria->claveAcceso)){
                    $datos = new stdClass();
                  $datos->claveAcceso=(string) $languages->infoTributaria->claveAcceso;
                  $datos->estab=(string) $languages->infoTributaria->estab;
                  $datos->ptoEmi=(string) $languages->infoTributaria->ptoEmi;
                  $datos->secuencial=(string) $languages->infoTributaria->secuencial;
                  $datos->NumDocumento=$datos->estab."-". $datos->ptoEmi."-". $datos->secuencial;
                  $datos->codDoc=(string) $languages->infoTributaria->codDoc;
                 foreach ($languages->children() as $key=>$info)
                {
                     if ($key=='infoFactura' or $key=='infoNotaDebito' or $key=='infoNotaCredito'){  
                         $datos->fechaemision=(string)$info->fechaEmision;
                         $datos->ruc=(string)$info->identificacionComprador;
                         $datos->nombre=(string)$info->razonSocialComprador; 
                     }
                     else if ($key=='infoGuiaRemision'){
                         $datos->ruc=(string)$info->rucTransportista;
                         $datos->nombre=(string)$info->razonSocialTransportista;
                         $datos->fechaemision=(string)$info->fechaIniTransporte;
                     }
                     else if ($key=='infoCompRetencion'){
                         $datos->ruc=(string)$info->identificacionSujetoRetenido;   
                         $datos->nombre=(string)$info->razonSocialSujetoRetenido;
                         $datos->fechaemision=(string)$info->fechaEmision;
                     }
                     
                     else if ($key=='infoAdicional'){  
                            foreach ($info as $node) {
                                  foreach ($node->attributes() as $atr => $value) {
                                      $atributo=(string)$value;
                                      if ($atributo=="Email Cliente")
                                      $datos->email=(string)$node;
if( !isset( $datos->email ) ) $datos->email = 'comprobantes@notario35quito.com';
                                      if ($atributo=="Dirección")
                                      $datos->direccion=(string)$node;
                                      if ($atributo=="Teléfono")
                                      $datos->telefono=(string)$node;
                                  }
                            }
                    }
                }
              }

              return $datos;
}


    function GuardarArchivo($data,$path){
       
        $usr_codigo=null;
        $email=null;
        $modelDoc=null;
        $respuesta=false;
        $usuario= Usuarios::model()->find("usr_ruc='{$data->ruc}'");
                 if ($usuario==null) 
                {
        
                   $User=new Usuarios;
                   $User->usr_nombre=$data->nombre;
                   $User->usr_password=  md5($data->ruc);
                   $User->usr_ruc=$data->ruc;
                   if(!empty ($data->email)){$User->usr_emal=$data->email;$email=$data->email;}
                   if(!empty ($data->direccion))$User->usr_direccion=$data->direccion;
                   if(! $User->save()) {   
                       file_put_contents('./errores.txt', print_r($User->getErrors(), LOCK_EX));
                   return false;    }
                   else{  $usr_codigo = $User->primaryKey; 
                       $roles= Authassignment::model()->find(array(
                        'condition' => 'userid=:userid and itemname=:itemname ',
                        'params' => array(':userid'=>'"'.$usr_codigo.'"','itemname'=>'Invitado') 
                        ));  
                        if ($roles==null) 
                        {
                            $Rol=new Authassignment();
                            $Rol->itemname='Invitado';
                            $Rol->userid=$usr_codigo;
                            $Rol->save();  
                        }
                   }
                }
                else  
                {
               
                    $usr_codigo=$usuario->usr_codigo;
                    if(!empty ($data->email)&& (trim($data->email)!=trim($usuario->usr_emal)))$usuario->usr_emal=$data->email; 
                    $email=$usuario->usr_emal; 
                    $usuario->usr_fecupd=new CDbExpression('NOW()');
                    $usuario->save();
                }
                if ($usr_codigo!=null) 
                        $modelDoc= Documentos::model()->find('doc_clave_acceso="'.$data->claveAcceso.'"');
                        if (count($modelDoc)>0){
                         $modelDoc->doc_fecupd=new CDbExpression('NOW()');
                         if(!$modelDoc->save()){  $respuesta=  false;}
                         else  { 
                             rename($path, $this->pathXml.'/'.$data->claveAcceso.'.xml');
                             $respuesta=  true;}
                        }
                        else{
                      
                            $model= new Documentos();   
                            $model->doc_clave_acceso=  $data->claveAcceso;
                            $model->doc_cod_doc=(string) $data->codDoc;
                            $date = DateTime::createFromFormat('d/m/Y', $data->fechaemision);
                            $model->doc_fecha_emision=$date->format('Y-m-d');
                            $model->usr_codigo=$usr_codigo;
                            $model->doc_num_documento=$data->NumDocumento;
                            if (!$model->save()) 
                            {
                              
                              file_put_contents('./errores.txt', print_r($model->getErrors(), LOCK_EX));
                               $respuesta=false;
                                
                            }
                            else {
                                  rename($path,  $this->pathXml.'/'.$data->claveAcceso.'.xml');$respuesta=  true;
                                  $this->actionCrearPdf($data->claveAcceso);
                                  if (!empty($email))
                                  {
                                      echo 'enviando e-mail a: '.$email ;
                                      $mail=new EnviarEmail;
                                      $mail->enviar($email,$data->nombre,$data->claveAcceso,$data->NumDocumento,$data->codDoc);
                                  }
                                  else 
                                      echo 'El archivo :'.$data->claveAcceso.'-'."No tiene email para Notificar \n";
                            }
                        }
                        return $respuesta;
            }
            
     public function actionCrearPdf($id){
	echo 'creando pdf';
        Yii::import('application.views.documentos.*'); 
        $pdf=new pdf();
        $pdf->run($id,$this->pathPdf,true);

        }
        
  
}
